C51 COMPILER V9.59.0.0   MOTOR                                                             04/02/2024 22:51:28 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MOTOR
OBJECT MODULE PLACED IN .\output\motor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE motor.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\motor.l
                    -st) TABS(2) OBJECT(.\output\motor.obj)

line level    source

   1          #include "motor.h"
   2          #include "pwm.h"
   3          
   4          /*
   5           *左               右 
   6           * M1              M2
   7           * out1/2          out3/4
   8           * in1/2           in3/4
   9           * P1.2/P1.0       p1.3/P1.1
  10           */
  11          
  12          void motor_init(void){
  13   1        pwm_init();
  14   1        P1M0 = 0x00;
  15   1        P1M1 = 0x00;
  16   1        P3M0 = 0x00;
  17   1        P3M1 = 0x00;
  18   1      }
  19          
  20          #define M1DO   P12
  21          #define M1AO   PWM_CH1_PIN10
  22          #define M2DO   P13
  23          #define M2AO   PWM_CH0_PIN11
  24          
  25          #define PWM_FULL            (255U)
  26          #define MOTOR_POWER_CLOCK   (80U)
  27          #define MOTOR_POWER_UNCLOCK (PWM_FULL - MOTOR_POWER_CLOCK)
  28          // 转向/前后同时控制时，转向优先。
  29          u8 motor_control(u8 forward, u8 back, u8 left, u8 right){
  30   1        if(((forward  > 0) && (back >0)) || ((left > 0) && (right > 0))) {
  31   2          return 1;
  32   2        }
  33   1        // 优先转向
  34   1        if(left > 0){
  35   2          // M1 反转， M2 正转
  36   2          M1DO = 0;
  37   2          pwm_write(M1AO, MOTOR_POWER_CLOCK);
  38   2      
  39   2          M1DO = 1;
  40   2          pwm_write(M2AO, MOTOR_POWER_CLOCK);
  41   2        }
  42   1        else if(right > 0){
  43   2          // M1 正转， M2 反转
  44   2          M1DO = 1;
  45   2          pwm_write(M1AO, MOTOR_POWER_UNCLOCK);
  46   2      
  47   2          M2DO = 0;
  48   2          pwm_write(M2AO, MOTOR_POWER_CLOCK);
  49   2        }
  50   1        // 其次前后
  51   1        else if(forward > 0) {
  52   2          // M1/2 正转
  53   2          M1DO = 1;
  54   2          pwm_write(M1AO, MOTOR_POWER_UNCLOCK);
C51 COMPILER V9.59.0.0   MOTOR                                                             04/02/2024 22:51:28 PAGE 2   

  55   2      
  56   2          M2DO = 1;
  57   2          pwm_write(M2AO, MOTOR_POWER_UNCLOCK);
  58   2        }
  59   1        else if (back > 0){
  60   2          // M1/2 反转
  61   2          M1DO = 0;
  62   2          pwm_write(M1AO, MOTOR_POWER_CLOCK);
  63   2      
  64   2          M2DO = 0;
  65   2          pwm_write(M2AO, MOTOR_POWER_CLOCK);
  66   2        }
  67   1        else{  // 停止
  68   2          M1DO = 0;
  69   2          pwm_write(M1AO, 0);
  70   2      
  71   2          M2DO = 0;
  72   2          pwm_write(M2AO, 0);
  73   2        }
  74   1        return 0;
  75   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    189    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
